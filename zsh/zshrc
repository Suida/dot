# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="intheloop"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    history
    vscode
    z
    docker 
    docker-compose
    kubectl
    golang
    yarn
    rust
    virtualenv
)

if [[ -e /etc/manjaro-release ]]
then
    # Use powerline
    USE_POWERLINE="true"
    # Source manjaro-zsh-configuration
    if [[ -e /usr/share/zsh/manjaro-zsh-config ]]; then
      source /usr/share/zsh/manjaro-zsh-config
    fi
    # Use manjaro zsh prompt
    if [[ -e /usr/share/zsh/manjaro-zsh-prompt ]]; then
      source /usr/share/zsh/manjaro-zsh-prompt
    fi
else
    plugins+=(
        zsh-autosuggestions
        zsh-syntax-highlighting
    )
fi

INTHELOOP_RIGHT_PROMPT_ELEMENTS=(status virtualenv)

source $ZSH/oh-my-zsh.sh

# User Configurations
# General
export EDITOR='nvim'
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Alias
alias zshconfig="vi ~/.zshrc"
alias ohmyzsh="vi ~/.oh-my-zsh"
alias gj="gitmoji $*"
if command -v batcat &> /dev/null
then
    alias bat="batcat $*"
fi
alias doc="nohup evince $* > /dev/null &"

# Define `open` command and `wh` variable
if [[ -e "/proc/sys/kernel/osrelease" ]] && [[ $(cat /proc/sys/kernel/osrelease) = *microsoft* ]]
then
    function open
    {
        if [[ $1 && ! -e $1 ]]
        then
            echo "File not found: $1" 1>&2
            return 1
        fi
        abspath=$(echo -E '\\wsl.localhost\'$WSL_DISTRO_NAME$(realpath $1) | sed 's|\/|\\|g')
        cmd.exe /C start $abspath 2> /dev/null
    }

    if [[ -e "$HOME/.winhome" ]]
    then
        export WIN_HOME=$(cat $HOME/.winhome)
    else
        export WIN_HOME=$(pwsh.exe -nop -c '-join ("/mnt/c", ($Env:HOMEPATH -split "\\" -join "/"))' | sed 's/\r//')
        echo $WIN_HOME > $HOME/.winhome
    fi
    export wh=$WIN_HOME
fi

# Get proxy uri
if [[ -e "$HOME/.PROXY" ]]
then
    PROXY_IP=$($AWK 'BEGIN{FS=":"} {print $2}' $HOME/.PROXY | cut -c 3-)
    PROXY_URI=$(cat $HOME/.PROXY)
else
    # Get windows host ip address if it is under WSL environment.
    if [[ -e "/proc/sys/kernel/osrelease" ]] && [[ $(cat /proc/sys/kernel/osrelease) = *microsoft* ]]
    then
        PROXY_IP=$(cat /etc/resolv.conf | awk '$1=="nameserver" {print $2}')
    else
        # If not, the default ip address is localhost
        PROXY_IP=127.0.0.1
    fi

    # Set default proxy port which will possibly be reformed when meeting new
    # requirements.
    PROXY_URI=http://$PROXY_IP:7890
fi
export http_proxy=$PROXY_URI
export https_proxy=$PROXY_URI
export HTTP_PROXY=$PROXY_URI
export HTTPS_PROXY=$PROXY_URI
export NO_PROXY=.docker.internal,$NO_PROXY

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fnm
export PATH=$HOME/.fnm:$PATH
eval "`fnm env`"
export npm_config_registry=https://registry.npm.taobao.org

# pnpm
export PNPM_HOME="/home/hugh/.local/share/pnpm"
export PATH="$PNPM_HOME:$PATH"

# Pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi
eval "$(pyenv virtualenv-init -)"
export PYTHON_CONFIGURE_OPTS="--enable-framework"
export PYTHON_CONFIGURE_OPTS="--enable-shared"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# Change driectory hook
function insource() {
    if [[ $(ls -a) == *.zsh-chpwd-hook* ]]
    then
        source .zsh-chpwd-hook
    fi
}
autoload -U add-zsh-hook
add-zsh-hook -Uz chpwd insource

# Fix tmux color
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#989cb4"

# Bat theme
export BAT_THEME=GitHub

# Machine specific configurations
[ -f ~/.local_conf.sh ] && source ~/.local_conf.sh
